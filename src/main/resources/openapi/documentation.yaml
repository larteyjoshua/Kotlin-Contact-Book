openapi: "3.0.3"
info:
  title: "Contact Book"
  description: "Simple API to Store contacts in Kotlin"
  version: "1.0.0"
servers:
  - url: "http://127.0.0.1:8080/v1/contacts"

paths:
  /add:
    post:
      description: "Creates a new Contact"
      requestBody:
        description: "A JSON object containing contact information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      "responses":
        "200":
          "description": "Created Contacts."
          "content":
            "application/json":
              "schema":
                  $ref: "#/components/schemas/contact"

              examples:
                Example#1:
#                  value: {   "id": 0,
#                             "name": "Eric Mensah",
#                             "email": "mensah@gmail.com",
#                             "telephone": "0234956743",
#                             "gpslocation": "GN-101-2334",
#                             "town": "Afienya"
#                  }

  /edit:
    put:
      description: "Edit a new Contact"
      requestBody:
        description: "A JSON object containing contact information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        "201":
          description: " contact"
          content:
            text/json:
              schema:
                type: "object"
              examples:
                Example#1:
  #                  value: {   "id": 0,
  #                             "name": "Eric Mensah",
  #                             "email": "mensah@gmail.com",
  #                             "telephone": "0234956743",
  #                             "gpslocation": "GN-101-2334",
  #                             "town": "Afienya"
  #                  }

  /{id}:
    get:
      description: "Returns a contact by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      "responses":
        "200":
          "description": " Contacts."
          "content":
            "application/json":
              "schema":
                  "$ref": "#/components/schemas/StringObjectMap"
              examples:
                  Example#1:
#                    value: {
#                      "contact": {
#                        "id": 1,
#                        "name": "Joshua Lartey",
#                        "email": "larteyjoshua@gmail.com",
#                        "telephone": "0249643365",
#                        "gpslocation": "GN-1001-9834",
#                        "town": "Tema"
#                      }
  /all:
      get:
        description: "Returns a contact all contacts"

        "responses":
          "200":
            "description": "A list of Contacts."
            "content":
              "application/json":
                "schema":
                    items:
                      "$ref": "#/components/schemas/Contact"



  /delete/{id}:
    delete:
      description: "Returns a contact deleted by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Contact"
              examples:
                Example#1:
#                    value: {
#                      "contact": {
#                        "id": 1,
#                        "name": "Joshua Lartey",
#                        "email": "larteyjoshua@gmail.com",
#                        "telephone": "0249643365",
#                        "gpslocation": "GN-1001-9834",
#                        "town": "Tema"
#                      }
components:
  schemas:
    Contact:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        email:
          type: "string"
        telephone:
          type: "string"
        gpslocation:
          type: "string"
        town:
          type: "string"

    StringObjectMap:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/Contact"
